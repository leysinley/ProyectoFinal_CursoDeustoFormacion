{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProvidersService {\n  constructor(http) {\n    this.http = http;\n    this.endpoint = 'http://localhost:3000/providers';\n  }\n  getProviders() {\n    return this.http.get(this.endpoint).pipe(map(response => response.providers));\n  }\n  getProviderByCif(cif) {\n    return this.http.get(`${this.endpoint}/${cif}`);\n  }\n  addProvider(provider) {\n    return this.http.post(this.endpoint, provider);\n  }\n  updateProvider(cif, provider) {\n    return this.http.put(`${this.endpoint}/${cif}`, provider);\n  }\n  deleteProvider(cif) {\n    return this.http.delete(`${this.endpoint}/${cif}`);\n  }\n  static {\n    this.ɵfac = function ProvidersService_Factory(t) {\n      return new (t || ProvidersService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProvidersService,\n      factory: ProvidersService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","ProvidersService","constructor","http","endpoint","getProviders","get","pipe","response","providers","getProviderByCif","cif","addProvider","provider","post","updateProvider","put","deleteProvider","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\2-TRABAJO\\CODING\\WEB\\Cursos\\CursoDeustoFormación\\ProyectoFinal\\9513418_AlvaroLey_ProyectoFinal\\providers-app\\src\\app\\services\\providers.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface  Provider {\n  cif: string;\n  name: string;\n  activity: string;\n  address: string;\n  city: string;\n  cp: string;\n  phone: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProvidersService {\n\n  endpoint = 'http://localhost:3000/providers';\n\n  constructor(private http: HttpClient) { }\n\n  getProviders(): Observable<Provider[]> {\n    return this.http.get<{ message: string, providers: Provider[] }>(this.endpoint)\n      .pipe(map(response => response.providers));\n  }\n\n  getProviderByCif(cif: string): Observable<Provider> {\n    return this.http.get<Provider>(`${this.endpoint}/${cif}`);\n  }\n\n  addProvider(provider: Provider): Observable<Provider> {\n    return this.http.post<Provider>(this.endpoint, provider);\n  }\n\n  updateProvider(cif: string, provider: Provider): Observable<Provider> {\n    return this.http.put<Provider>(`${this.endpoint}/${cif}`, provider);\n  }\n\n  deleteProvider(cif: string): Observable<Provider> {\n    return this.http.delete<Provider>(`${this.endpoint}/${cif}`);\n  }\n}\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAepC,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,QAAQ,GAAG,iCAAiC;EAEJ;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAA6C,IAAI,CAACF,QAAQ,CAAC,CAC5EG,IAAI,CAACP,GAAG,CAACQ,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAAC,CAAC;EAC9C;EAEAC,gBAAgBA,CAACC,GAAW;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,QAAQ,IAAIO,GAAG,EAAE,CAAC;EAC3D;EAEAC,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAW,IAAI,CAACV,QAAQ,EAAES,QAAQ,CAAC;EAC1D;EAEAE,cAAcA,CAACJ,GAAW,EAAEE,QAAkB;IAC5C,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAW,GAAG,IAAI,CAACZ,QAAQ,IAAIO,GAAG,EAAE,EAAEE,QAAQ,CAAC;EACrE;EAEAI,cAAcA,CAACN,GAAW;IACxB,OAAO,IAAI,CAACR,IAAI,CAACe,MAAM,CAAW,GAAG,IAAI,CAACd,QAAQ,IAAIO,GAAG,EAAE,CAAC;EAC9D;;;uBAzBWV,gBAAgB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhBrB,gBAAgB;MAAAsB,OAAA,EAAhBtB,gBAAgB,CAAAuB,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}